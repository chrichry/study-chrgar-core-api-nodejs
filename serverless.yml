service: study-aws-dynamodb-serverless-nodejs
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'eu-west-3'}
  stage: ${opt:stage, "dev"}
  profile: ${self:custom.profiles.${sls:stage}, 'asys-si-dev-serverless'}
  memorySize: 128
  timeout: 120

  environment:
    STUDY_TABLE: study_dynamodb_${self:provider.stage}

  apiGateway:
    apiKeys:
      - study-dynamodb-key

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.STUDY_TABLE}"

functions:
  createItem:
    handler: src/index.create
    events:
      - http:
          path: /create
          method: post
          private: true
  getItem:
    handler: src/index.read
    events:
      - http:
          path: /read
          method: post
          private: true

plugins:
  - serverless-prune-versions
  - serverless-plugin-typescript
  - serverless-dynamodb
  - serverless-offline
  - serverless-dynamodb-local

custom:
  serverless-offline:
    host: 0.0.0.0
    noPrependStageInUrl: true
  serverless-dynamodb:
    port: 8000
    stages:
      - local
    start:
      #docker: true
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
  profiles:
    local: asys-si-local-serverless
    dev: asys-si-dev-serverless
    prod: asys-si-serverless
  prune:
    automatic: true
    includeLayers: true
    number: 3

resources:
  Resources:
    OrganizationDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.STUDY_TABLE}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
